name: uptime

on:
  push:
    branches:
      - main
      
permissions:
  contents: write
jobs:
  # check-artifact:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Read old data
  #       uses: actions/download-artifact@v3
  #       with:
  #           name: uptime
  
  # generate-empty-artifact:
  #   runs-on: ubuntu-latest
  #   needs: ["check-artifact"]
  #   if: failure()
  #   steps:
  #     - name: Generate empty uptime.json
  #       run: echo {} > uptime.json
  #     - name: Upload empty uptime.json
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: uptime
  #         path: uptime.json

      
  deploy:
    runs-on: ubuntu-latest
    env: 
      CI_COMMIT_MESSAGE: Continuous Integration Build Artifacts
      CI_COMMIT_AUTHOR: Continuous Integration
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: 3.x

            
      - run: echo "cache_id=$(date --utc '+%V')" >> $GITHUB_ENV 
      - uses: actions/cache@v3
        with:
          key: uptime-${{ env.cache_id }}
          path: .cache
          restore-keys: |
            uptime-
      - name: Install dependencies
        run: pip install httpx

      - name: Read old data
        continue-on-error: true
        uses: actions/download-artifact@v3
        with:
            name: uptime

      - name: Create uptime.md
        if: always()
        run: python .github/scripts/uptime.py uptime.json docs/uptime.md

      - name: Upload math result for job 1
        uses: actions/upload-artifact@v3
        with:
          name: uptime
          path: uptime.json
    
      - name: Create commit with updates
        uses: devops-infra/action-commit-push@master
        with:
          github_token: "${{ secrets.GITHUB_TOKEN }}"
          add_timestamp: true
          commit_prefix: "[AUTO]"
          commit_message: "Uptime"
          force: false
          target_branch: main

      # # Commit and push all changed files. 
      # # Must only affect files that are listed in "paths-ignore".
      # - name: GIT Commit Build Artifacts (coverage, dist, devdist, docs)
      #   # Only run on main branch push (e.g. pull request merge).
      #   if: github.event_name == 'push'
      #   run: |
      #     git config --global user.name "${{ env.CI_COMMIT_AUTHOR }}"
      #     git config --global user.email "username@users.noreply.github.com"
      #     git add coverage devdist dist docs
      #     git commit -m "${{ env.CI_COMMIT_MESSAGE }}"
      #     git push

